utils = require '../utils'

isUserDefinedType = (type) ->
    ['string', 'number', 'boolean', 'object', 'array', ''].indexOf(type) is -1   

isPrimitiveType = (type) ->
    ['string', 'number', 'boolean', 'array'].indexOf(type) > -1   

getFieldDefinition = (def) ->
    #Convert short hands to full definitions.
    #eg: 'string' means { type: 'string', required: true }
    if typeof(def) is 'string'
        defString = def.split ' '        
        switch defString[0]
            when 'integer'
                fieldDef = {
                    type: 'number',
                    integer: true
                }
            else
                fieldDef = {
                    type: defString[0]                    
                }
        fieldDef.required = defString.indexOf('!required') is -1
    else 
        fieldDef = {}
        utils.extend fieldDef, def

    if fieldDef.autoGenerated and (fieldDef.event is 'created' or fieldDef.event is 'updated')        
        fieldDef.type = 'number'
        fieldDef.integer = 'true'
        fieldDef.required = true

    fieldDef.required ?= true
    fieldDef.type ?= ''
    fieldDef 
        
    
exports.isUserDefinedType = isUserDefinedType
exports.isPrimitiveType = isPrimitiveType
exports.getFieldDefinition = getFieldDefinition

